{"version":3,"sources":["components/Checkout/Checkout.js","components/EmailCheck/EmailCheck.js","components/FaxFooter/FaxFooter.js","components/FaxNumberInput/FaxNumberInput.js","components/FileSelector/FileSelector.js","components/Logo/Logo.js","components/ProgressBar/ProgressBar.js","components/PromoCode/PromoCode.js","components/Notification/Notification.js","components/Subtext/Subtext.js","components/Dashboard/DashBoardController.js","components/Dashboard/Dashboard.js","App.js","serviceWorker.js","index.js","assets/faxASAP_Logo.svg","assets/stripeBadge.svg","assets/twilio-seal-white.svg","assets/Fx_Logo.svg"],"names":["Checkout","props","onToken","token","saveToken","state","charge","this","setState","newProps","amount","name","currency","label","image","logo","zipCode","reconfigureOnUpdate","stripeKey","Component","EmailCheck","saveEmailCheck","s","filledIn","onChange","className","value","FaxFooter","href","src","stripeSrc","alt","twilioSrc","id","header","fixedFooter","type","FaxNumberInput","saveFaxNumber","customInput","TextInput","format","mask","icon","FileSelector","saveFile","accept","Logo","logoSrc","ProgressBar","progressStatus","progressClass","progressWidth","String","style","width","PromoCode","savePromoCheck","event","promoCheck","target","checked","initPromoCode","savePromoCode","m","placeholder","noLayout","onClick","selectColor","runNotification","toastHTML","message","window","M","toast","html","classes","displayLength","Subtext","pageCount","formattedCharge","formattedPromoValue","pdfjsLib","formatCharge","charArr","toString","split","splice","length","unshift","join","generateMD5","data","md5","base64","str","base64js","toByteArray","base64Decode","generateBodyFormData","fields","file","bodyFormData","FormData","key","append","GlobalWorkerOptions","workerSrc","Dashboard","progressUpload","progressEvent","percentCompleted","Math","round","loaded","total","setProgress","progStatus","runFileLoadSequence","promoValue","reader","FileReader","readAsDataURL","onloadend","resData","result","pdfData","atob","clientFileMD5","console","log","Promise","resolve","reject","getDocument","promise","then","pdf","numPages","catch","e","getNumberOfPages","baseCharge","costPerPage","draftValue","max","calculateCharge","error","runNotifcation","faxNumber","replace","callbackEmail","files","rawPromoCode","promoCode","checkPromoCode","initialAPICall","secondaryAPICall","tertiaryAPICall","clientFileKey","initialAPIResponse","a","fetch","method","mode","headers","body","JSON","stringify","response","json","code","err","axios","url","config","crossDomain","onUploadProgress","disabled","padding","height","backgroundColor","color","stripeBadge","twilioBadge","App","Route","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.83a4b6c6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport logo from \"../../assets/Fx_Logo.svg\";\n\nexport default class Checkout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      charge: null,\n    };\n  }\n\n  onToken = token => {\n    this.props.saveToken(token); \n  };\n\n  componentDidMount() {\n    this.setState({\n      charge: this.props.charge,\n    });\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      charge: newProps.charge,\n    });\n  }\n\n  render() {\n    const { charge } = this.state;\n    return (\n      <StripeCheckout\n        amount={charge}\n        name=\"FaxASAP.com\"\n        currency=\"USD\"\n        label={`PAY & SEND`}\n        image={logo}\n        token={this.onToken}\n        zipCode={true}\n        reconfigureOnUpdate={true}\n        stripeKey=\"pk_live_as1rDPw8MZqEq0gicYxW3aIT\"\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Checkbox, Col } from 'react-materialize';\n \nexport default function EmailCheck(props){\n  let { saveEmailCheck } = props;\n  return (\n    <Col s={12}>\n      <Checkbox \n        label={'Email Confirmation'}\n        filledIn={true} \n        onChange={saveEmailCheck}\n        className={\"subtext\"}\n        value=''\n      />\n    </Col>\n  )\n}","import React from 'react';\nimport { Modal, Row } from 'react-materialize';\n \nexport default function FaxFooter(props){\n  return (\n    <Row className={\"footer page-footer\"}>\n      <div className={\"footer-item\"}>\n      <a href=\"https://stripe.com\"><img className=\"badge-image\" src={props.stripeSrc} alt=\"Powered by Stripe\" /></a> \n      </div>\n      <div className={\"footer-item\"}>\n      <a href=\"https://twilio.com\"><img className=\"badge-image\" src={props.twilioSrc} alt=\"Powered by Twilio\" /></a>\n      </div>\n      <div className={\"footer-item\"}>\n        <a href=\"#modalFAQ\" className=\"modal-trigger\">FAQ</a>\n      </div>\n      <div className={\"footer-item\"}>\n        <a href=\"#modalPP\" className=\"modal-trigger\">Privacy Policy</a>\n      </div>\n      <div className={\"footer-item\"}>\n        <a href=\"#modalTOS\" className=\"modal-trigger\">Terms of Service</a>\n      </div>\n      <Modal id=\"modalFAQ\" header=\"Frequently Asked Questions\" fixedFooter>\n        <ul>\n          <li>\n            <b>Something went wrong or I need some help; who can I contact?</b>\n            <p>\n              Feel free to send us an email: <a href=\"mailto:support@faxasap.com\">support@faxasap.com</a>\n            </p>\n          </li>\n          <li>\n            <b>Where can I provide an email address for sending the fax confirmation?</b>\n            <p>\n              We use the email address that's collected when you enter your payment information, if you choose to receive an email confirmation. If you do not check the box to indicate that you want an email for the fax confirmation then you will only receive an email for the Stripe payment receipt.\n            </p>\n          </li>\n          <li>\n            <b>Why did you make this?</b>\n            <p>\n              We discovered that just trying to fax a single page document via the Internet was actually quite difficult. Existing fax services require upfront payments upwards of $10, the purchase of ‘fax credits’, and other scammy practices. We built FaxASAP.com so anyone can fax a single fax in 30 seconds, while being paying a fair price.  \n            </p>\n          </li>\n          <li>\n            <b>Why should I trust you with my credit card info?</b>\n            <p>\n              You don't actually have to trust us with that information, since we see or handle any credit card information. All financial transaction information is handled in your browser and then sent to world-renown payment processor <a href=\"https://stripe.com\">Stripe</a>, who sends us a cryptographic token that allows us to verify your ability to pay for the service rendered without exposing your sensitive information. Furthermore, we also promise to never sell or otherwise transfer any personal information. You can also see our Privacy Policy (link found at the bottom of FaxASAP.com) for further information on how we treat your data.\n            </p>\n          </li>\n          <li>\n            <b>Why should I trust you with faxing my potentially sensitive documents?</b>\n            <p>\n              If you want to send a fax, you do eventually have to trust someone, whether it's the manufacturer of your fax machine, your telecommunications provider, the local fax machine at your library or office supply store, or even another online fax service. And to be honest, if you're sending something extremely sensitive, maybe look at more secure options. But if you just want to send a fax and be done with it, we treat our client's uploads with the utmost sensitivity.\n            </p>\n            <p>\n              All uploaded documents are transmitted via secure, encrypted HTTPS connections. All uploads are deleted from the service within 24 hours of the upload taking place. The document is transmitted by another world-class provider, <a href=\"https://twilio.com\">Twilio</a>, and is deleted from their system immediately after transmission. All files are <a href=\"https://en.wikipedia.org/wiki/Data_at_rest#Encryption\">encrypted at rest</a>, meaning that any uploaded files are encrypted before being stored, even before they are retrieved to be faxed. All systems are monitored to log any breaches or inappropriate system access, and we use administrative restrictions to prevent unnecessary internal access to uploaded documents or client information.\n            </p>\n          </li>\n          <li>\n            <b>Where are my files and information being sent?</b>\n            <p>\n              Your credit card information is only sent from your browser directly to Stripe's servers. Any files uploaded are stored within the United States in an encrypted status until retrieved by Twilio for transmission, and then deleted from our temporary storage and Twilio's system shortly thereafter. Metadata for the fax are stored in an encrypted database within the United States as well.\n            </p>\n          </li>\n          <li>\n            <b>Why should I pay you when I can use a free fax service?</b>\n            <p>\n              Just about any other fax service will have some sort of gimmick, whether it's ads on a cover sheet, some plan to have your purchase more than you need to use, or reselling customer data. With FaxASAP.com, you only pay for what you use rather than being the product for some other company.\n            </p>\n          </li>\n          <li>\n            <b>What file types are currently supported?</b>\n            <p>\n              At the present time we only support PDF files. We considered allowing different file types and then converting to PDF. However, we felt that rather than risk a poor file conversion, we would allow other programs to focus on the file conversion while we focus on simplifying the online fax process. Most relevant programs support exporting to PDF natively and we encourage you do so before utilizing FaxASAP.com\n            </p>\n            <p>\n              Some instructions on how to save to a PDF file can be found here: <a href=\"https://www.wikihow.com/Save-a-PDF-File\">https://www.wikihow.com/Save-a-PDF-File</a>.\n            </p>\n          </li>\n          <li>\n            <b>Why can't I use a promo code without entering information for a valid credit card?</b>\n            <p>\n              There are two principle reasons to collect credit card information, even with the use of a promo code:\n            </p>\n            <ol>\n              <li>Preventing abuse and the transmission of malicious faxes</li>\n              <li>If a fax would cost more to send than the promo code provides credit for, then we will charge the remaining balance</li>\n            </ol>\n          </li>\n        </ul>\n      </Modal>\n      <Modal id=\"modalPP\" header=\"Privacy Policy\" fixedFooter>\n        <p>Your privacy is important to us. It is Zira Creative LLC's policy to respect your privacy regarding any information we may collect from you across our website, <a href=\"https://FaxASAP.com\">https://FaxASAP.com</a>, and other sites we own and operate.</p>\n        <p>We only ask for personal information when we truly need it to provide a service to you. We collect it by fair and lawful means, with your knowledge and consent. We also let you know why we’re collecting it and how it will be used.</p>\n        <p>We collect a fax number to know where to send your fax, file information to provide the content to fax, and an email address for sending a fax confirmation if desired. Billing information in the form of a credit card number, email address, CVC code, expiration date, and postal code is collected to process a payment for the fax service.</p>\n        <p>We only retain collected information for as long as necessary to provide you with your requested service. What data we store, we’ll protect within commercially acceptable means to prevent loss and theft, as well as unauthorized access, disclosure, copying, use, or modification.</p>\n        <p>We don’t share any personally identifying information publicly or with third-parties, except when required to by law.</p>\n        <p>Our website may link to external sites that are not operated by us. Please be aware that we have no control over the content and practices of these sites, and cannot accept responsibility or liability for their respective privacy policies.</p>\n        <p>You are free to refuse our request for your personal information, with the understanding that we may be unable to provide you with some of your desired services.</p>\n        <p>Your continued use of our website will be regarded as acceptance of our practices around privacy and personal information. If you have any questions about how we handle user data and personal information, feel free to contact us.</p>\n        <p>This policy is effective as of 1 July 2019.</p>\n      </Modal>\n      <Modal id=\"modalTOS\" header=\"Zira Creative LLC Terms of Service\" fixedFooter>\n        <h5>1. Terms</h5>\n        <p>By accessing the website at <a href=\"https://FaxASAP.com\">https://FaxASAP.com</a>, you are agreeing to be bound by these terms of service, all applicable laws and regulations, and agree that you are responsible for compliance with any applicable local laws. If you do not agree with any of these terms, you are prohibited from using or accessing this site. The materials contained in this website are protected by applicable copyright and trademark law.</p>\n        <h5>2. Use License</h5>\n        <ol type=\"a\">\n           <li>Permission is granted to temporarily download one copy of the materials (information or software) on Zira Creative LLC's website for personal, non-commercial transitory viewing only. This is the grant of a license, not a transfer of title, and under this license you may not:\n           <ol type=\"i\">\n               <li>modify or copy the materials;</li>\n               <li>use the materials for any commercial purpose, or for any public display (commercial or non-commercial);</li>\n               <li>attempt to decompile or reverse engineer any software contained on Zira Creative LLC's website;</li>\n               <li>remove any copyright or other proprietary notations from the materials; or</li>\n               <li>transfer the materials to another person or \"mirror\" the materials on any other server.</li>\n           </ol>\n            </li>\n           <li>This license shall automatically terminate if you violate any of these restrictions and may be terminated by Zira Creative LLC at any time. Upon terminating your viewing of these materials or upon the termination of this license, you must destroy any downloaded materials in your possession whether in electronic or printed format.</li>\n        </ol>\n        <h5>3. Disclaimer</h5>\n        <ol type=\"a\">\n           <li>The materials on Zira Creative LLC's website are provided on an 'as is' basis. Zira Creative LLC makes no warranties, expressed or implied, and hereby disclaims and negates all other warranties including, without limitation, implied warranties or conditions of merchantability, fitness for a particular purpose, or non-infringement of intellectual property or other violation of rights.</li>\n           <li>Further, Zira Creative LLC does not warrant or make any representations concerning the accuracy, likely results, or reliability of the use of the materials on its website or otherwise relating to such materials or on any sites linked to this site.</li>\n        </ol>\n        <h5>4. Limitations</h5>\n        <p>In no event shall Zira Creative LLC or its suppliers be liable for any damages (including, without limitation, damages for loss of data or profit, or due to business interruption) arising out of the use or inability to use the materials on Zira Creative LLC's website, even if Zira Creative LLC or a Zira Creative LLC authorized representative has been notified orally or in writing of the possibility of such damage. Because some jurisdictions do not allow limitations on implied warranties, or limitations of liability for consequential or incidental damages, these limitations may not apply to you.</p>\n        <h5>5. Accuracy of materials</h5>\n        <p>The materials appearing on Zira Creative LLC's website could include technical, typographical, or photographic errors. Zira Creative LLC does not warrant that any of the materials on its website are accurate, complete or current. Zira Creative LLC may make changes to the materials contained on its website at any time without notice. However Zira Creative LLC does not make any commitment to update the materials.</p>\n        <h5>6. Links</h5>\n        <p>Zira Creative LLC has not reviewed all of the sites linked to its website and is not responsible for the contents of any such linked site. The inclusion of any link does not imply endorsement by Zira Creative LLC of the site. Use of any such linked website is at the user's own risk.</p>\n        <h5>7. Modifications</h5>\n        <p>Zira Creative LLC may revise these terms of service for its website at any time without notice. By using this website you are agreeing to be bound by the then current version of these terms of service.</p>\n        <h5>8. Governing Law</h5>\n        <p>These terms and conditions are governed by and construed in accordance with the laws of Utah and you irrevocably submit to the exclusive jurisdiction of the courts in that State or location.</p>\n      </Modal>\n    </Row>\n  )\n}","import React from 'react';\nimport { TextInput } from \"react-materialize\";\nimport NumberFormat from \"react-number-format\";\n\nexport default function FaxNumberInput(props){\n  let { saveFaxNumber } = props;\n  return (\n    <NumberFormat\n      className=\"subtext\"\n      label=\"Fax Number\"\n      s={12}\n      customInput={TextInput}\n      format=\"+1 (###) ###-####\"\n      mask=\"_\"\n      onChange={saveFaxNumber}\n      type=\"tel\"\n      icon=\"phone_forwarded\"\n    />\n  )\n}","import React from 'react';\nimport { Col } from 'react-materialize'\n\nexport default function FileSelector(props){\n  let { saveFile } = props;\n  return (\n    <Col s={12}>\n      <div className=\"file-field input-field subtext\">\n        <div className=\"btn\">\n          <span><i className=\"material-icons left\">cloud_upload</i>PDF File</span>\n          <input type=\"file\" onChange={saveFile} accept=\"application/pdf\" />\n        </div>\n        <div className=\"file-path-wrapper\">\n          <input className=\"file-path validate subtext\" type=\"text\" />\n        </div>\n      </div>\n    </Col>\n  )\n}","import React from 'react';\nimport { Row } from \"react-materialize\";\n\n\nexport default function Logo(props){\n  return (\n    <Row>\n    \t<div className={\"instructions\"}>\n\t      <img src={props.logoSrc} className=\"App-logo\" alt=\"logo\" />\t\t\n\t      <p>\n\t        $0.50 for the first page, $0.10 per additional page.\n\t      </p>\n    \t</div>\n  </Row>\n  )\n}","import React, { Component } from \"react\";\n\nexport default class ProgressBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      progressStatus: -1\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      progressStatus: this.props.progressStatus,\n    });\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      progressStatus: newProps.progressStatus,\n    });\n  }\n\n  render() {\n    const { progressStatus } = this.state;\n    let progressClass = '';\n    if (progressStatus === 0) {\n      progressClass = \"indeterminate\";\n    } else {\n      progressClass = \"determinate\";\n    }\n    let progressWidth = String(progressStatus) + '%';\n    if (progressStatus > -1) {\n      return (\n        <div id=\"progressBackground\" className=\"progress-background\">\n          <div className=\"progress\">\n            <div id=\"progressBar\" className={`${progressClass}`} style={{width: progressWidth}}>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return(null);\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button, Checkbox, Col, Row, TextInput } from 'react-materialize';\n\nexport default class PromoCode extends Component {\n    constructor(props) {\n        super(props);\n\n        this.initPromoCode = props.initPromoCode;\n        this.savePromoCode = props.savePromoCode;\n\n        this.state = {\n            promoCheck: false\n        };\n    }\n\n    savePromoCheck = event => {\n        this.setState({\n            promoCheck: event.target.checked\n        })\n    }\n\n    render() {\n        const { promoCheck } = this.state;\n        return (\n            <Row className='promo-row'>\n                <Col m={4}>\n                    <Checkbox \n                      label={'Promo Code'}\n                      filledIn={true} \n                      onChange={this.savePromoCheck}\n                      className={\"subtext\"}\n                      value=''  />\n                </Col>\n                <Col m={6} className={'promo-text-col'}>\n                    <TextInput \n                      placeholder=\"Promo Code\"\n                      onChange={this.savePromoCode}\n                      className={promoCheck ? 'subtext promo-input' : 'hide promo-input'} \n                      noLayout={true}/>\n                </Col>\n                <Col m={2} className={'promo-text-col'}>\n                    <Button \n                      className={promoCheck ? '' : 'hide'}\n                      onClick={this.initPromoCode} > \n                      Check\n                    </Button>\n                </Col>\n            </Row>\n        );\n      };\n\n}","\nlet selectColor = (type) => {\n  switch (type){\n    case \"SUCCESS\":\n      return \"toastSuccess\"\n    case \"ERROR\":\n      return \"toastError\"\n    case \"WARNING\":\n      return \"toastWarning\"\n    case \"MESSAGE\":\n      return \"toastMessage\"\n    default:\n      return \"\"\n  }\n}\n\nexport default function runNotification(props){\n\n  const toastHTMLSuffix = '</span><button onclick=\"M.Toast.getInstance(this.parentElement).dismiss();\" class=\"btn-flat toast-action\"><i class=\"material-icons\">close</i></button>';\n  var toastHTML = '<span>' + props.message + toastHTMLSuffix;\n  return (\n    window.M.toast({html: toastHTML, classes: selectColor(props.type), displayLength: 4000})\n  )\n}","import React from 'react';\nimport { Row } from \"react-materialize\";\n\nexport default function Subtext(props){\n  let { pageCount, formattedCharge, formattedPromoValue} = props;\n  return (\n    <Row>\n        <h5 className=\"subtext\">\n            {pageCount\n              ? (pageCount > 1 ? `${pageCount} pages loaded: ${formattedCharge}` : `${pageCount} page loaded: ${formattedCharge}`) \n              : \"No pages loaded: $0.00\"}\n            {formattedPromoValue ? `  |  Promotional value applied: ${formattedPromoValue}`: null}\n        </h5>\n    </Row>\n  )\n}","import base64js from 'base64-js';\nimport md5 from 'js-md5';\n\n\n// Loaded via <script> tag, create shortcut to access PDF.js exports.\nvar pdfjsLib = window[\"pdfjs-dist/build/pdf\"];\n\n// The workerSrc property shall be specified.\npdfjsLib.GlobalWorkerOptions.workerSrc =\n  \"https://mozilla.github.io/pdf.js/build/pdf.worker.js\";\n\n\nexport function getNumberOfPages(pdfData){\n  return new Promise((resolve, reject) => {\n    pdfjsLib.getDocument({ data: pdfData }).promise.then(function (pdf) {\n      console.log(\"PDF file loaded\");\n\n      var numPages = pdf.numPages;\n      console.log(\"Number of Pages: \" + numPages);\n\n      resolve(numPages);\n      reject(0);\n    }).catch(e => { \n      console.log('error loading getDocument: ' + e); \n      reject(e);\n    });\n  });\n};\n\nexport function formatCharge(charge) {\n  if(charge){\n  let charArr = charge.toString().split('')\n  charArr.splice(charArr.length - 2, 0,\".\")\n  if (charArr.length === 3) {\n    charArr.unshift(\"$0\");\n  } else {\n    charArr.unshift(\"$\");\n  }\n  return charArr.join(\"\")\n  } else {\n    return \"$0.00\"\n  }\n}\n\nexport function base64Decode(str, encoding = 'utf-8') {\n  return base64js.toByteArray(str);\n}\n\nexport function createFileReader(){\n  return new FileReader();\n}\n\nexport function calculateCharge(baseCharge, pageCount, costPerPage, promoValue){\n  let draftValue = baseCharge + (pageCount * costPerPage);\n  console.log(`draftValue: ${draftValue}`)\n  console.log(`promoValue: ${promoValue}`)\n  return Math.max(0, draftValue - promoValue);\n}\n\nexport function generateMD5(data){\n  return md5.base64(base64Decode(data))\n}\n\nexport function generateBodyFormData(fields, file){\n  var bodyFormData = new FormData();\n  for (var key in fields) {\n    bodyFormData.append(key, fields[key]);\n  }\n  bodyFormData.append('file', file)\n  return bodyFormData;\n}\n\n\n","import React, { Component } from \"react\";\nimport {Button, Row} from \"react-materialize\";\nimport axios from 'axios';\n\nimport logo from \"../../assets/faxASAP_Logo.svg\";\nimport stripeBadge from \"../../assets/stripeBadge.svg\";\nimport twilioBadge from \"../../assets/twilio-seal-white.svg\";\n\nimport Checkout from \"../Checkout/Checkout\";\nimport EmailCheck from '../EmailCheck/EmailCheck';\nimport FaxFooter from '../FaxFooter/FaxFooter';\nimport FaxNumberInput from '../FaxNumberInput/FaxNumberInput';\nimport FileSelector from '../FileSelector/FileSelector';\nimport Logo from '../Logo/Logo'\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport PromoCode from '../PromoCode/PromoCode';\nimport runNotifcation from '../Notification/Notification'\nimport Subtext from '../Subtext/Subtext';\n\nimport { \n  formatCharge, \n  getNumberOfPages, \n  createFileReader, \n  calculateCharge,\n  generateMD5,\n  generateBodyFormData\n} from './DashBoardController'\n\nconst baseCharge = 40;\nconst costPerPage = 10;\n\nconst checkPromoApi = \"https://api.faxasap.com/check-promo\";\nconst initFaxApi = \"https://api.faxasap.com/init-fax\";\nconst sendFaxApi = \"https://api.faxasap.com/send-fax\";\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      pageCount: null,\n      faxNumber: '',\n      charge: null,\n      clientFileMD5: null,\n      clientFileKey: null,\n      formattedCharge: \"$0.00\",\n      initialAPIResponse: null,\n      token: null,\n      callbackEmail: null,\n      progressStatus: -1,\n      rawPromoCode: '',\n      promoCode: '',\n      promoValue: null\n    };\n  }\n\n  async tertiaryAPICall(){\n    this.setProgress(0);\n    let {charge, clientFileKey, clientFileMD5, pageCount, faxNumber, token, callbackEmail, promoCode, promoValue} = this.state\n\n    console.log('check:', charge, clientFileKey, clientFileMD5, pageCount, faxNumber, token, callbackEmail, promoCode, promoValue)\n    fetch(sendFaxApi, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"client-amount\": charge,\n        \"client-file-key\": clientFileKey,\n        \"client-file-md5\": clientFileMD5,\n        \"client-page-count\": pageCount,\n        \"dest-number\": faxNumber,\n        \"stripe-token-id\": token.id,\n        \"callback-email\": callbackEmail,\n        \"promo-code\": promoCode,\n        \"promo-value\": promoValue\n      })\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"Response data\", data);\n        if (data.code === 200) {\n          runNotifcation({message: \"Fax was successfully initiated\", type: \"SUCCESS\"})\n        } else if (data.code === 400) {\n          runNotifcation({message: data.message, type: \"ERROR\"})\n        } else if (data.code === 500) {\n          runNotifcation({message: \"Internal server error occurred. You were not charged.\", type: \"MESSAGE\"})\n        } else {\n          runNotifcation({message: \"Some error occurred. You were not charged.\", type: \"MESSAGE\"})\n        }\n        this.setProgress(-1);\n      })\n      .catch(err => {\n        console.log(\"error: \", err);\n        runNotifcation({message: \"Error faxing file\", type: \"ERROR\"});\n        this.setProgress(-1);\n      });\n\n  }\n\n  async secondaryAPICall(){\n    let { initialAPIResponse, file} = this.state;\n    let bodyFormData = generateBodyFormData(initialAPIResponse.fields, file )\n          \n      console.log('initialAPIResponse:', initialAPIResponse);\n      console.log('file:', file);\n      console.log('bodyformdata', bodyFormData)    \n      console.log(\"Uploading file via presigned URL\");\n      await axios({\n        method: \"post\",\n        url: initialAPIResponse.url,\n        data: bodyFormData,\n        config: {\n          headers: {\"Access-Control-Allow-Origin\": \"*\"},\n          crossDomain: true,\n          onUploadProgress: this.setProgress\n        },\n      }).catch(error => {\n        console.log('error: ', error);\n        runNotifcation({message: \"Error uploading file\", type: \"ERROR\"});\n        this.setProgress(-1);\n      })\n  }\n\n  async initialAPICall(token){\n    this.setProgress(0);\n    await axios({\n      method: \"post\",\n      url: initFaxApi,\n      headers: {\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Accept\": \"application/json, text/plain, */*\",\n      },\n      data: {\n        \"md5-hash\": this.state.clientFileMD5,\n        \"stripe-token-id\": token.id\n      },\n      crossDomain: true\n    })\n      .then(response => { \n        console.log('successful initial API call:', response)\n        console.log('data: ', response.data.result)\n        this.setState({\n          clientFileKey: response.data.result.fields['key'],\n          initialAPIResponse: response.data.result\n        }); \n      })\n      .catch(error => {\n        console.log('error: ', error);\n        runNotifcation({message: \"Error faxing file\", type: \"ERROR\"});\n        this.setProgress(-1);\n      }) \n  }\n\n  progressUpload = (progressEvent) => {\n    var percentCompleted = Math.round( (progressEvent.loaded * 100) / progressEvent.total );\n    this.setProgress(percentCompleted);\n  };\n\n  setProgress = (progStatus) => {\n    this.setState({ progressStatus: progStatus });\n  };\n\n  runFileLoadSequence = (file, promoValue) => {\n    let reader = createFileReader();\n\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      let resData = reader.result.split(\",\")[1];\n      let pdfData = atob(resData);\n\n      this.setState({\n        clientFileMD5: generateMD5(resData)\n      })\n\n      console.log(\"PDF File MD5 Hash: \" + this.state.clientFileMD5);\n\n      getNumberOfPages(pdfData)\n      .then(pageCount => {\n        let charge = calculateCharge(baseCharge, pageCount, costPerPage, promoValue);\n        let formattedCharge = formatCharge(charge);\n\n        this.setState({\n          charge,\n          formattedCharge,\n          pageCount\n        });\n        console.log(\"Prepared PDF file for upload\"); \n      })\n      .catch(error => {\n        console.log('Error:', error)\n        runNotifcation({\n          message: \"Error: Invalid PDF File, could not load\",\n          type: \"ERROR\"\n        });\n\n        this.setState({\n          pageCount: null\n        })\n      })\n    };\n  };\n\n  saveFaxNumber = event => {\n    this.setState({\n      faxNumber: event.target.value.replace(/[()\\-\\s]/g, \"\")\n    })\n  };\n\n  saveEmailCheck = event => {\n    this.setState({\n      callbackEmail: event.target.checked\n    })\n  };\n\n  saveFile = event => {\n    let file = event.target.files[0]\n\n    this.setState({\n      file\n    })\n\n    this.runFileLoadSequence(file, this.state.promoValue);\n  };\n\n  savePromoCode = event => {\n    this.setState({\n      rawPromoCode: event.target.value\n    })\n  };\n\n  initPromoCode = () => {\n    let promoCode = this.state.rawPromoCode;\n\n    if (promoCode.length < 1) {\n      runNotifcation({message: 'Promo Code reset.', type: \"ERROR\"});\n      let { file, promoValue } = this.state;\n      if (promoValue) {\n        this.setState({ promoValue: null });\n        if (file) {\n          this.runFileLoadSequence(file, null);\n        }\n      }\n      return\n    }\n\n    try{ // This will only catch issues generating the promises, not running the code\n      this.checkPromoCode(promoCode)\n    } catch(error){\n      console.log('Error:', error)\n      runNotifcation({message: \"Error calling API\", type: \"ERROR\"});\n    }\n  };\n\n  async checkPromoCode(promoCode){\n    fetch(checkPromoApi, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\"promo-code\": promoCode})\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"Response data\", data);\n        if (data.code === 200) {\n          console.log(data);\n          this.setState({ promoValue: data.result['promo-value'], promoCode: promoCode });\n          if (this.state.file) { this.runFileLoadSequence(this.state.file, this.state.promoValue); }\n          runNotifcation({message: \"Promo Code is valid, value applied.\", type: \"SUCCESS\"})\n        } else if (data.code === 400) {\n          this.setState({ promoValue: null, promoCode: '' });\n          runNotifcation({message: data.message, type: \"ERROR\"})\n        } else if (data.code === 500) {\n          this.setState({ promoValue: null, promoCode: '' });\n          runNotifcation({message: \"Internal server error occurred while checking promo code.\", type: \"MESSAGE\"})\n        } else {\n          this.setState({ promoValue: null, promoCode: '' });\n          runNotifcation({message: \"Some error occurred while checking promo code.\", type: \"MESSAGE\"})\n        }\n      })\n      .catch(err => {\n        console.log(\"error: \", err);\n        this.setState({ promoValue: null, promoCode: '' });\n        runNotifcation({message: \"Error checking promo code\", type: \"ERROR\"});\n      });\n  }\n\n  saveToken = (token) => {\n    console.log('token: ', token)\n    this.setState({ token })\n\n    try{ // This will only catch issues generating the promises, not running the code\n      this.initialAPICall(token)\n      .then(() => this.secondaryAPICall())\n      .then(() => this.tertiaryAPICall())\n    } catch(error){\n      console.log('Error:', error)\n      runNotifcation({message: \"Error calling API\", type: \"ERROR\"});\n      this.setProgress(-1);\n    }\n  };\n\n  render() {\n    const { pageCount, faxNumber, charge, formattedCharge, progressStatus, promoValue } = this.state;\n    return (\n      <div>\n        <div className=\"container main-container\">\n          <Logo logoSrc={logo} />\n          <Row>\n            <FileSelector saveFile={this.saveFile}/>\n            <FaxNumberInput saveFaxNumber={this.saveFaxNumber} />\n            <EmailCheck saveEmailCheck={this.saveEmailCheck}/>\n          </Row>\n          <PromoCode savePromoCode={this.savePromoCode} initPromoCode={this.initPromoCode}/>\n          <Subtext pageCount={pageCount} \n                   formattedCharge={formattedCharge} \n                   formattedPromoValue={promoValue ? formatCharge(promoValue): null }/> \n          <Row>\n          {pageCount && faxNumber\n          ?  <Checkout\n              saveToken={this.saveToken}\n              charge={charge}\n            />\n          : <Button className=\"StripeCheckout\" disabled>\n              <span \n              className=\"StripeCheckout\" \n              style={{padding: '0 12px', height: '40px', backgroundColor: 'inherit', color: 'inherit'}}>\n                Pay & Send\n              </span>\n            </Button>\n          } \n          </Row>\n        </div>\n        <FaxFooter stripeSrc={stripeBadge} twilioSrc={twilioBadge} />\n        <ProgressBar progressStatus={progressStatus}/>\n      </div>\n    );\n  };\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"home-page\">\n          <Router>\n            <Route path=\"/\" component={Dashboard} />\n          </Router>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/faxASAP_Logo.38f775f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/stripeBadge.1a48cc9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/twilio-seal-white.ff01bd3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Fx_Logo.9b1d907a.svg\";"],"sourceRoot":""}